/* Generated by Yosys 0.47+116 (git sha1 4b3c03dab, g++ 9.4.0-1ubuntu1~20.04.2 -fPIC -O3) */

(* top =  1  *)
(* src = "counter8bit.sv:1.1-14.10" *)
module counter8bit(clk, rst_n, count);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  (* force_downto = 32'd1 *)
  (* src = "counter8bit.sv:11.22-11.31|/home/lizeren/Desktop/yosys/share/techmap.v:270.23-270.24" *)
  wire [7:0] _08_;
  (* force_downto = 32'd1 *)
  (* src = "counter8bit.sv:11.22-11.31|/home/lizeren/Desktop/yosys/share/techmap.v:270.26-270.27" *)
  wire [7:0] _09_;
  (* src = "counter8bit.sv:2.17-2.20" *)
  input clk;
  wire clk;
  (* src = "counter8bit.sv:4.24-4.29" *)
  output [7:0] count;
  reg [7:0] count;
  (* src = "counter8bit.sv:3.17-3.22" *)
  input rst_n;
  wire rst_n;
  assign _08_[0] = ~count[0];
  assign _09_[1] = count[1] ^ count[0];
  assign _00_ = ~(count[1] & count[0]);
  assign _09_[2] = ~(_00_ ^ count[2]);
  assign _01_ = count[2] & ~(_00_);
  assign _09_[3] = _01_ ^ count[3];
  assign _02_ = ~(count[3] & count[2]);
  assign _03_ = _02_ | _00_;
  assign _09_[4] = ~(_03_ ^ count[4]);
  assign _04_ = count[4] & ~(_03_);
  assign _09_[5] = _04_ ^ count[5];
  assign _05_ = ~(count[5] & count[4]);
  assign _06_ = _05_ | _03_;
  assign _09_[6] = ~(_06_ ^ count[6]);
  assign _07_ = count[6] & ~(_06_);
  assign _09_[7] = _07_ ^ count[7];
  (* \always_ff  = 32'd1 *)
  (* src = "counter8bit.sv:7.5-12.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) count[6] <= 1'h0;
    else count[6] <= _09_[6];
  (* \always_ff  = 32'd1 *)
  (* src = "counter8bit.sv:7.5-12.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) count[7] <= 1'h0;
    else count[7] <= _09_[7];
  (* \always_ff  = 32'd1 *)
  (* src = "counter8bit.sv:7.5-12.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) count[0] <= 1'h0;
    else count[0] <= _08_[0];
  (* \always_ff  = 32'd1 *)
  (* src = "counter8bit.sv:7.5-12.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) count[1] <= 1'h0;
    else count[1] <= _09_[1];
  (* \always_ff  = 32'd1 *)
  (* src = "counter8bit.sv:7.5-12.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) count[2] <= 1'h0;
    else count[2] <= _09_[2];
  (* \always_ff  = 32'd1 *)
  (* src = "counter8bit.sv:7.5-12.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) count[3] <= 1'h0;
    else count[3] <= _09_[3];
  (* \always_ff  = 32'd1 *)
  (* src = "counter8bit.sv:7.5-12.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) count[4] <= 1'h0;
    else count[4] <= _09_[4];
  (* \always_ff  = 32'd1 *)
  (* src = "counter8bit.sv:7.5-12.8" *)
  always @(posedge clk, negedge rst_n)
    if (!rst_n) count[5] <= 1'h0;
    else count[5] <= _09_[5];
  assign _08_[7:1] = count[7:1];
  assign _09_[0] = _08_[0];
endmodule
